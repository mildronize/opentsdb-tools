#!/usr/bin/env python
import click
import logging
logging.basicConfig(level=logging.INFO)

def get_bash_sleep_counter():
    return """
function sleep_counter {
    time=$1
    time=$((time-1))
    echo "Sleeping for $time seconds"
    for i in $(seq $time -1 0)
    do
        # echo $i
        echo -ne 'Remaining time: '
        if [ $i -lt 60 ]; then
            echo -ne "$i seconds\\r"
        else
            minute=$((i/60))
            echo -ne "$minute minutes\\r"
        fi

        sleep 1
    done
    echo -ne 'Finished                  \\r'
    echo -ne '\\n'
}
"""


@click.command()
@click.option('--num-files', default=10, help='Number of files')
@click.option('--sleep', default=0, help='Sleep time in each chunk (seconds)')
@click.option('--chunk-size', default=1, help='Number of files in each chunk')
def generate_import_shell(num_files, sleep, chunk_size):
    prefix = "dps-"
    print("#!/bin/bash")
    print(get_bash_sleep_counter())
    logging.info("num_files  : %s" % num_files)
    logging.info("sleep      : %s" % sleep)
    logging.info("chunk_size : %s" % chunk_size)
    is_last_loop = False
    for i in range(1,num_files+1, chunk_size):
        print("../tsdb import", end="")
        if num_files % chunk_size != 0 and i + chunk_size > num_files:
            actual_chunk_size = num_files % chunk_size
            is_last_loop = True
        else:
            actual_chunk_size = chunk_size
        target_files = ""
        for chunk_id in range(actual_chunk_size):
            target_files += " %s%d" % (prefix, chunk_id + i)
        print(target_files)
        if not is_last_loop :
            print("clear")
            print("echo Finished importing%s\n" % target_files)
            print("sleep_counter %d" % sleep)

generate_import_shell()

